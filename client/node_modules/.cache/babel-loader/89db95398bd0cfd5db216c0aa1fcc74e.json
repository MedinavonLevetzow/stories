{"ast":null,"code":"import _toConsumableArray from\"/home/medina/programming/sideProjects/stories_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{FETCH_ALL,CREATE,UPDATE,DELETE,LIKE}from'../constants/actionTypes';export default(function(){var posts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_ALL:return action.payload;case CREATE:return[].concat(_toConsumableArray(posts),[action.payload]);case UPDATE:case LIKE:return posts.map(function(post){return post._id===action.payload._id?action.payload:post;});case DELETE:return posts.filter(function(post){return post._id!==action.payload;});default:return posts;}});","map":{"version":3,"sources":["/home/medina/programming/sideProjects/stories_project/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","posts","action","type","payload","map","post","_id","filter"],"mappings":"2LAAA,OAAQA,SAAR,CAAmBC,MAAnB,CAA2BC,MAA3B,CAAmCC,MAAnC,CAA2CC,IAA3C,KAAsD,0BAAtD,CACA,eAAe,UAAsB,IAArBC,CAAAA,KAAqB,2DAAb,EAAa,IAAVC,CAAAA,MAAU,2CAEjC,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKP,CAAAA,SAAL,CACI,MAAOM,CAAAA,MAAM,CAACE,OAAd,CAEJ,IAAKP,CAAAA,MAAL,CACI,mCAAWI,KAAX,GAAkBC,MAAM,CAACE,OAAzB,GAEJ,IAAKN,CAAAA,MAAL,CACA,IAAKE,CAAAA,IAAL,CACI,MAAOC,CAAAA,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,CAAkCL,MAAM,CAACE,OAAzC,CAAmDE,IAA7D,EAAV,CAAP,CAEJ,IAAKP,CAAAA,MAAL,CACI,MAAOE,CAAAA,KAAK,CAACO,MAAN,CAAa,SAACF,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAA9B,EAAb,CAAP,CAEJ,QACI,MAAOH,CAAAA,KAAP,CAfR,CAkBH,CApBD","sourcesContent":["import {FETCH_ALL, CREATE, UPDATE, DELETE, LIKE} from '../constants/actionTypes';\nexport default (posts = [],action) =>{\n    \n    switch(action.type){\n        case FETCH_ALL:\n            return action.payload;\n            \n        case CREATE:\n            return [...posts, action.payload]; \n\n        case UPDATE:\n        case LIKE:\n            return posts.map((post)=> (post._id === action.payload._id ? action.payload : post));  \n\n        case DELETE:\n            return posts.filter((post)=> (post._id !== action.payload));       \n\n        default:\n            return posts;  \n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}