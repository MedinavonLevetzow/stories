{"ast":null,"code":"var _jsxFileName = \"/home/medina/programming/roocaa/tutorial/memories_project/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const emptyPost = {\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  };\n  const [postData, setPostData] = useState(emptyPost);\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null); //returning one single Post\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  console.log(currentId);\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData(emptyPost);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.form} ${classes.root}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"dFU/PtehgPWMf/8EIE6bRgOY4ro=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/medina/programming/roocaa/tutorial/memories_project/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useSelector","useDispatch","createPost","updatePost","Form","currentId","setCurrentId","emptyPost","creator","title","message","tags","selectedFile","postData","setPostData","post","state","posts","find","p","_id","classes","dispatch","console","log","handleSubmit","e","preventDefault","clear","paper","form","root","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport useStyles from './styles';\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {createPost, updatePost} from '../../actions/posts';\n\n\n\n\nconst Form = ({currentId, setCurrentId}) =>{\n    const emptyPost = {creator:'', title:'', message:'', tags:'', selectedFile: ''};\n    const [postData, setPostData] = useState(emptyPost);\n    const post = useSelector((state)=> currentId ? state.posts.find((p)=>p._id === currentId) : null); //returning one single Post\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    \n    console.log(currentId);\n\n    useEffect(()=> {\n        if(post) setPostData(post);\n    }, [post]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n    if(currentId){\n        dispatch(updatePost(currentId, postData));\n    }else{\n        dispatch(createPost(postData));\n    }\n\n    };\n\n    const clear = () =>{\n        setCurrentId(null);\n        setPostData(emptyPost);\n    };\n\n    return(\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.form} ${classes.root}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e)=>setPostData({...postData, creator:e.target.value})}/>\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e)=>setPostData({...postData, title:e.target.value})}/>\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e)=>setPostData({...postData, message:e.target.value})}/>\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e)=>setPostData({...postData, tags:e.target.value})}/>\n\n                <div className={classes.fileInput}>\n                    <FileBase type=\"file\"multiple={false}onDone={({base64}) => setPostData({...postData, selectedFile:base64})}/>\n                </div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button  variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}